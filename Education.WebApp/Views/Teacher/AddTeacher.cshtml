@model Education.Entity.Teachers.AllTeacherDetails
@{
    ViewBag.Title = "AddTeacher";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="col-xs-12 Addstudent-bg white-color">
    <div class="col-xs-12 col-sm-10 col-sm-offset-1 pad-top-20">
        <div class="tab">
            <button class="tablinks" onclick="openCity(event, 'student')" id="defaultOpen">Teacher Details</button>
            @*<button class="tablinks" onclick="openCity(event, 'parent')">Parent Details</button>
                <button class="tablinks" onclick="openCity(event, 'professional')">Professional Details</button>
                <button class="tablinks" onclick="openCity(event, 'other')">Other Details</button>*@
        </div>


        @using (Html.BeginForm("AddTeacherDetails", "Teacher", FormMethod.Post))
        {
            @Html.AntiForgeryToken()

            <div id="student" class="tabcontent">
                <div class="col-xs-12 side-no-pad">
                    <div class="col-xs-12 side-no-pad mr-top-10">
                        <div class="col-xs-12 col-sm-2 side-no-pad pad7 xs-details">
                            Registration Date
                        </div>
                        <div class="col-xs-12 col-sm-3">
                            <select class="form-control">
                                <option>29 september 2017</option>
                                <option>29 september 2017</option>
                                <option>29 september 2017</option>
                                <option>29 september 2017</option>
                                <option>29 september 2017</option>
                            </select>
                        </div>
                    </div>
                    <div class="col-xs-12 side-no-pad mr-top-10">
                        <div class="col-xs-12 col-sm-2 side-no-pad pad7 xs-details">
                            Course:
                        </div>
                        <div class="col-xs-12 col-sm-3">

                            @*@foreach (var item in Model.CourseList)
                                {
                                 <input id="chk@(item.Value)"
                                        type="checkbox"
                                        value="@item.ID"
                                        checked="@item.IsChecked" name="checkResp"   />
                                 @item.NAME <br />
                                }*@

                            @for (int i = 0; i < Model.CourseList.Count; i++)
                            {
                                @Html.HiddenFor(m => m.CourseList[i].ID)
                                @Html.CheckBoxFor(m => m.CourseList[i].IsChecked)
                                @Html.LabelFor(m => m.CourseList[i].IsChecked,
                           Model.CourseList[i].NAME)
                            }







                        </div>
                    </div>
                    <div class="col-xs-12 side-no-pad mr-top-10">
                        <div class="col-xs-12 col-sm-2 side-no-pad pad7 xs-details">
                            Course:
                        </div>
                        <div class="col-xs-12 col-sm-3">



                            @for (int i = 0; i < Model.SubjectList.Count; i++)
                            {
                                @Html.HiddenFor(m => m.SubjectList[i].SUBJECTID)
                                @Html.CheckBoxFor(m => m.SubjectList[i].IsChecked)
                                @Html.LabelFor(m => m.SubjectList[i].IsChecked, Model.SubjectList[i].SUBJECTNAME)
                            }







                        </div>
                    </div>
                    <div class="col-xs-12 side-no-pad mr-top-10">
                        <div class="col-xs-12 col-sm-2 side-no-pad pad7 xs-details">
                            FIRSTNAME:
                        </div>
                        <div class="col-xs-12 col-sm-3 col-md-2 xs-details">

                            @Html.EditorFor(model => model.teacherdetails.FIRSTNAME, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.teacherdetails.FIRSTNAME, "", new { @class = "text-danger" })

                        </div>
                    </div>
                    <div class="col-xs-12 side-no-pad mr-top-10 xs-details">
                        <div class="col-xs-12 col-md-2 side-no-pad pad7 wh">
                            MIDDLENAME
                        </div>
                        <div class="col-xs-12 col-sm-3 col-md-2 xs-details">
                            @*<input type="email" class="form-control" placeholder="First Name">*@
                            @Html.EditorFor(model => model.teacherdetails.MIDDLENAME, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.teacherdetails.MIDDLENAME, "", new { @class = "text-danger" })


                        </div>

                    </div>
                    <div class="col-xs-12 side-no-pad mr-top-10 xs-details">
                        <div class="col-xs-12 col-md-2 side-no-pad pad7 wh">
                            LASTNAME
                        </div>
                        <div class="col-xs-12 col-sm-3 col-md-2 xs-details">
                            @*<input type="email" class="form-control" placeholder="First Name">*@
                            @Html.EditorFor(model => model.teacherdetails.LASTNAME, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.teacherdetails.LASTNAME, "", new { @class = "text-danger" })
                        </div>

                    </div>
                    <div class="col-xs-12 side-no-pad mr-top-10 xs-details">
                        <div class="col-xs-12 col-md-2 side-no-pad pad7 wh">
                            EMAILID
                        </div>
                        <div class="col-xs-12 col-sm-3 col-md-2 xs-details">
                            @*<input type="email" class="form-control" placeholder="First Name">*@
                            @Html.EditorFor(model => model.teacherdetails.EMAILID, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.teacherdetails.EMAILID, "", new { @class = "text-danger" })
                        </div>

                    </div>

                    <div class="col-xs-12 side-no-pad mr-top-10 xs-details">
                        <div class="col-xs-12 col-md-2 side-no-pad pad7 wh">
                            MOBILENUMBER
                        </div>
                        <div class="col-xs-12 col-sm-3 col-md-2 xs-details">
                            @*<input type="email" class="form-control" placeholder="First Name">*@
                            @Html.EditorFor(model => model.teacherdetails.MOBILENUMBER, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.teacherdetails.MOBILENUMBER, "", new { @class = "text-danger" })
                        </div>

                    </div>



                    <div class="col-xs-12 side-no-pad mr-top-10 pad-top-10 xs-details">
                        <div class="col-xs-12 col-md-2 side-no-pad">
                            Gender
                        </div>
                        <div class="col-xs-12 col-md-8">
                            <form class="radio-gender">
                                <label class="radio-inline">
                                    <input type="radio" name="optradio">Male
                                </label>
                                <label class="radio-inline">
                                    <input type="radio" name="optradio">Female
                                </label>
                                <label class="radio-inline">
                                    <input type="radio" name="optradio">Others
                                </label>
                            </form>
                        </div>
                    </div>


                    <div class="col-xs-12 side-no-pad add-btn">
                        <div class="col-xs-1 side-no-pad">
                            @*<a href="">Add</a>*@
                            @*<input type="submit" value="AddStudent" class="btn btn-default" />*@
                            <div class="tab">
                                <input type="submit" style="background-color:dodgerblue" value="AddTeacher" />
                                @*<a href="">Add</a>*@
                            </div>


                        </div>
                    </div>
                </div>
            </div>
            @ViewBag.message
        }


    </div>
</div>

<script type="text/javascript">
    function openCity(evt, cityName) {
        // Declare all variables
        var i, tabcontent, tablinks;

        // Get all elements with class="tabcontent" and hide them
        tabcontent = document.getElementsByClassName("tabcontent");
        for (i = 0; i < tabcontent.length; i++) {
            tabcontent[i].style.display = "none";
        }

        // Get all elements with class="tablinks" and remove the class "active"
        tablinks = document.getElementsByClassName("tablinks");
        for (i = 0; i < tablinks.length; i++) {
            tablinks[i].className = tablinks[i].className.replace(" active", "");
        }

        // Show the current tab, and add an "active" class to the button that opened the tab
        document.getElementById(cityName).style.display = "block";
        evt.currentTarget.className += " active";
    }
    document.getElementById("defaultOpen").click();
</script>

