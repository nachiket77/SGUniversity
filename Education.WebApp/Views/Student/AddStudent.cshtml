@model Education.Entity.Students.AllDetails
@{
    ViewBag.Title = "AddStudent";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
@*<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>*@
<link href="~/assets/css/style.css" rel="stylesheet" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css" />
<script src="https://code.jquery.com/jquery-latest.min.js"></script>
<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
<script src="http://code.jquery.com/jquery-latest.min.js"
        type="text/javascript"></script>
@*<link href="~/assets/css/bootstrap.css" rel="stylesheet" />*@


<script>
    $(document).ready(function () {
        $("#mobile-num").keydown(function (e) {
            // Allow: backspace, delete, tab, escape, enter and .
            if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||
                // Allow: Ctrl+A, Command+A
                (e.keyCode === 65 && (e.ctrlKey === true || e.metaKey === true)) ||
                // Allow: home, end, left, right, down, up
                (e.keyCode >= 35 && e.keyCode <= 40)) {
                // let it happen, don't do anything
                return;
            }
            // Ensure that it is a number and stop the keypress
            if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                e.preventDefault();
            }
        });

        $("#Parentmobile-num").keydown(function (e) {
            // Allow: backspace, delete, tab, escape, enter and .
            if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||
                // Allow: Ctrl+A, Command+A
                (e.keyCode === 65 && (e.ctrlKey === true || e.metaKey === true)) ||
                // Allow: home, end, left, right, down, up
                (e.keyCode >= 35 && e.keyCode <= 40)) {
                // let it happen, don't do anything
                return;
            }
            // Ensure that it is a number and stop the keypress
            if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                e.preventDefault();
            }
        });

        $("#mothermobile-num").keydown(function (e) {
            // Allow: backspace, delete, tab, escape, enter and .
            if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||
                // Allow: Ctrl+A, Command+A
                (e.keyCode === 65 && (e.ctrlKey === true || e.metaKey === true)) ||
                // Allow: home, end, left, right, down, up
                (e.keyCode >= 35 && e.keyCode <= 40)) {
                // let it happen, don't do anything
                return;
            }
            // Ensure that it is a number and stop the keypress
            if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                e.preventDefault();
            }
        });


        $("#percentageobtained").keydown(function (e) {
            // Allow: backspace, delete, tab, escape, enter and .
            if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||
                // Allow: Ctrl+A, Command+A
                (e.keyCode === 65 && (e.ctrlKey === true || e.metaKey === true)) ||
                // Allow: home, end, left, right, down, up
                (e.keyCode >= 35 && e.keyCode <= 40)) {
                // let it happen, don't do anything
                return;
            }
            // Ensure that it is a number and stop the keypress
            if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                e.preventDefault();
            }
        });
    });
</script>

<div class="col-xs-12 Addstudent-bg white-color">
    <div class="col-xs-12 col-sm-10 col-sm-offset-1 pad-top-20 row">
        <div class="row">
            <div class="tab row ">
                <button class="tablinks" onclick="openCity(event, 'student')" id="defaultOpen">Student Details</button>
                <button class="tablinks" onclick="openCity(event, 'parent')">Parent Details</button>
                <button class="tablinks" onclick="openCity(event, 'professional')">Professional Details</button>
                @*<button class="tablinks" onclick="openCity(event, 'other')">Other Details</button>*@
            </div>
        </div>

        @using (Html.BeginForm("AddStudentDetails", "Student", FormMethod.Post, new { id = "myform" }))
        {
            @Html.AntiForgeryToken()

            @Html.ValidationMessageFor(m => m.StudentDetails.MOBILENO)
            if (ViewBag.message != null)
            {
                @*<script type="text/javascript">
                    window.onload = function () {
                        alert("@ViewBag.message");
                    };
                </script>*@
                @*<div class="modal" id="result">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <button class="close" id="close">&times;</button>
                                    <h4 class="modal-title"></h4>
                                    <form>
                                        <div class="form-group">
                                            <label>
                                                HIIi
                                            </label>

                                        </div>

                                    </form>
                                </div>

                            </div>
                        </div>

                    </div>*@
            }
            <script type="text/javascript">

                $(document).ready(function () {
                    $(document).on("click", "#btnSubmit", function () { //
                        //  debugger;
                        var rowCount = $('.table-body').length + 1;
                        var trHtml = $('.table-body').html();
                        var button = '<button type="button" id="btnDelete" class="deleteContact btn btn btn-danger btn-xs" style="margin-top:12%">Remove</button>';
                        //$('#mainTbl').append("<table><tbody><tr>" + trHtml + "</tr></tbody></table>");
                        var contactdiv = '<tr class="table-body">' + trHtml +
                        //'<td><button type="button" id="btnAdd" class="btn btn-xs btn-primary classAdd">Add More</button>' +
                       '<td>' + button + '</td>' +
                        '</tr>';
                        $('#tblstudent').append(contactdiv); // Adding these controls to Main table class
                    });


                    $(document).on("click", "#btnDelete", function () { //
                        // debugger;
                        $(this).closest('tr').remove();
                        return false;
                    });
                });
            </script>

            @*<script type="text/javascript">
                    // debugger;
                    $(document).ready(function () {
                        $(document).on("click", "#mobileno", function () {
                            debugger;

                                //$("#progress").show();

                           // $("#result").show();

                        });
                    });
                </script>*@
            <script type="text/javascript">
                // debugger;
                $(document).ready(function () {
                    $(document).on("click", "#close", function () {
                        debugger;

                        //$("#progress").show();

                        $("#result").hide();
                        return false;

                    });
                });
            </script>
            @*<script type="text/javascript">
                $(function () {
                    $("#mobileno").click(function () {
                        debugger;
                        var itemlist = [];

                        //get cell values, instead of the header text.
                        $("#table-body tr:not(:first)").each(function () {
                            var tdlist = $(this).find("td");
                            var Item = { Class: $(tdlist[0]).html()};
                            itemlist.push(Item);
                        })

                        $.ajax({
                            url: '@Url.Action("InsertValue", "Home")', //
                            dataType: "json",
                            data: JSON.stringify({ itemlist: itemlist }),
                            type: "POST",
                            contentType: "application/json; charset=utf-8",
                            success: function (result) {
                                alert("success");
                            },
                            error: function (xhr) {
                                alert("error");
                            }
                        });
                    });
                });
                    </script>*@
            @*<script type="text/javascript">

                    $(document).ready(function () {
                        //Dropdownlist Selectedchange event
                        $("#Country").change(function () {
                            debugger;
                            $("#State").empty();
                            $.ajax({
                                type: "POST",
                                url: "/Student/GetStates", // we are calling json method
                                data: { id: $("#Country").val() },
                                contentType: "application/json; charset=utf-8",
                                dataType: 'json',


                                // here we are get value of selected country and passing same value
                                //as inputto json method GetStates.

                                success: function (states) {
                                    // states contains the JSON formatted list
                                    // of states passed from the controller

                                    $.each(states, function (i, state) {
                                        $("#State").append('<option value="' + state.Value + '">' +
                                             state.Text + '</option>');
                                        // here we are adding option for States

                                    });
                                },
                                error: function (ex) {
                                    alert('Failed to retrieve states.' + ex);
                                }
                            });
                            return false;
                        })
                    });
                </script>*@
         

            <div id="student" class="tabcontent">
                <br />
                @if (TempData["Success"] != null)
                {
                    <p class="alert alert-success" id="successMessage">@TempData["Success"]</p>
                }
                @if (TempData["Error"] != null)
                {
                    <p class="alert alert-danger" id="successMessage">@TempData["Error"]</p>
                }
                <div class="col-xs-12 side-no-pad row">
                    <div class="col-xs-12 md-12 row side-no-pad mr-top-10 xs-details">
                        <div class="col-xs-12 col-md-2 side-no-pad pad7 wh">
                            Student Name
                        </div>
                        <div class="col-xs-12 col-sm-3 col-md-2 xs-details as-left">
                            @*<input type="email" class="form-control" placeholder="First Name">*@
                            @Html.EditorFor(model => model.StudentDetails.FIRSTNAME, new { htmlAttributes = new { @class = "form-control", @placeholder = "First Name", required = "required", maxlength = "25" } })
                            @Html.ValidationMessageFor(model => model.StudentDetails.FIRSTNAME, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-xs-12 col-sm-3 col-md-2 xs-details">
                            @*<input type="email" class="form-control" placeholder="Middle Name">*@
                            @Html.EditorFor(model => model.StudentDetails.MIDDLENAME, new { htmlAttributes = new { @class = "form-control", @placeholder = "Middle Name", required = "required", maxlength = "25" } })
                            @Html.ValidationMessageFor(model => model.StudentDetails.MIDDLENAME, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-xs-12 col-sm-3 col-md-2 xs-details">
                            @*<input type="email" class="form-control" placeholder="Last Name">*@
                            @Html.EditorFor(model => model.StudentDetails.LASTNAME, new { htmlAttributes = new { @class = "form-control", @placeholder = "Last Name", required = "required", maxlength = "25" } })
                            @Html.ValidationMessageFor(model => model.StudentDetails.LASTNAME, "", new { @class = "text-danger" })
                        </div>
                    </div>
                  
                    <div class="col-xs-12 col-md-6 row side-no-pad mr-top-10 xs-details">
                        <div class="col-xs-12 side-no-pad mr-top-10">
                            <div class="col-xs-12 col-sm-5 side-no-pad pad7 xs-details">
                                Date of Birth:
                            </div>
                            <div class="col-xs-12 col-sm-7">
                                @Html.EditorFor(model => model.StudentDetails.DOB, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                                @Html.ValidationMessageFor(model => model.StudentDetails.DOB, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-xs-12 side-no-pad mr-top-10">
                            <div class="col-xs-12 col-sm-5 side-no-pad pad7 xs-details">
                                Course:
                            </div>
                            <div class="col-xs-12 col-sm-7 course-type">
                                @*@foreach (var item in Model.CourseList)
                                    {
                                     <input id="chk@(item.Value)"
                                            type="checkbox"
                                            value="@item.ID"
                                            checked="@item.IsChecked" name="checkResp"   />
                                     @item.NAME <br />
                                    }*@
                                @for (int i = 0; i < Model.CourseList.Count; i++)
                                {
                                    @Html.HiddenFor(m => m.CourseList[i].ID)

                                    @Html.CheckBoxFor(m => m.CourseList[i].IsChecked)
                                    @Html.LabelFor(m => m.CourseList[i].IsChecked, Model.CourseList[i].NAME)
                                }
                            </div>
                        </div>
                        <div class="col-xs-12 side-no-pad mr-top-10">
                            <div class="col-xs-12 col-md-5 side-no-pad">
                                Gender
                            </div>
                            <div class="col-xs-12 col-md-7">
                                Male  @Html.RadioButtonFor(model => model.StudentDetails.Gender, "Male")
                                Female @Html.RadioButtonFor(model => model.StudentDetails.Gender, "Female")
                            </div>
                        </div>
                        <div class="col-xs-12 side-no-pad mr-top-10">
                            <div class="col-xs-12 col-md-5 side-no-pad pad7 wh">
                                Nationality
                            </div>
                            <div class="col-xs-12 col-md-7 pad-bottom-10">
                                @*<select class="form-control">
                                        <option>India</option>
                                    </select>*@
                                @Html.EditorFor(model => model.StudentDetails.NATIONALITY, new { htmlAttributes = new { @class = "form-control", required = "required", maxlength = "20" } })
                                @Html.ValidationMessageFor(model => model.StudentDetails.NATIONALITY, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-xs-12 side-no-pad mr-top-10">
                            <div class="col-xs-12 col-md-5 side-no-pad pad7 wh">
                                Street Address
                            </div>
                            <div class="col-xs-12 col-sm-7 col-md-7 xs-details">
                                @*<input type="email" class="form-control" placeholder="First Name">*@
                                @Html.EditorFor(model => model.StudentDetails.AddressLine1, new { htmlAttributes = new { @class = "form-control", required = "required", maxlength = "50" } })
                                @Html.ValidationMessageFor(model => model.StudentDetails.AddressLine1, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-xs-12 side-no-pad mr-top-10">
                            <div class="col-xs-12 col-md-5 side-no-pad pad7 wh">
                                Landmark:
                            </div>
                            <div class="col-xs-12 col-sm-7 col-md-7 xs-details">
                                @*<input type="email" class="form-control" placeholder="First Name">*@
                                @Html.EditorFor(model => model.StudentDetails.AddressLine2, new { htmlAttributes = new { @class = "form-control", required = "required", maxlength = "50" } })
                                @Html.ValidationMessageFor(model => model.StudentDetails.AddressLine2, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>
                    <div class="col-xs-12 col-md-5 col-md-offset-1 row side-no-pad mr-top-10 xs-details">
                        <div class="col-xs-12 side-no-pad mr-top-10 xs-details">
                            <div class="col-xs-12 col-md-5 side-no-pad pad7 wh">
                                Country:
                            </div>
                            <div class="col-xs-12 col-sm-7">
                                @*<input type="email" class="form-control" placeholder="First Name">*@
                                @Html.DropDownListFor(model => model.countrymaster, new SelectList(Model.Countrylist, "CountryID", "CountryName"), "Please select", new { @id = "Country", @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-xs-12 side-no-pad mr-top-10 xs-details">
                            <div class="col-xs-12 col-md-5 side-no-pad pad7 wh">
                                State:
                            </div>
                            <div class="col-xs-12 col-sm-7 col-md-7 xs-details">
                                @*<input type="email" class="form-control" placeholder="First Name">*@
                                @Html.DropDownListFor(model => model.statemaster, new SelectList(Model.statelist, "StateID", "StateName"), "Please select", new { @id = "State", @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-xs-12 side-no-pad mr-top-10 xs-details">
                            <div class="col-xs-12 col-md-5 side-no-pad pad7 wh">
                                City:
                            </div>
                            <div class="col-xs-12 col-sm-7 col-md-7 xs-details">
                                @*<input type="email" class="form-control" placeholder="First Name">*@
                                @Html.DropDownListFor(model => model.Citymaster, new SelectList(Model.citylist, "CityID", "CityName"), "Please select", new { @id = "State", @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-xs-12 side-no-pad mr-top-10 xs-details">
                            <div class="col-xs-12 col-md-5 side-no-pad pad7 wh">
                                Pincode:
                            </div>
                            <div class="col-xs-12 col-sm-7 col-md-7 xs-details">
                                @*<input type="email" class="form-control" placeholder="First Name">*@
                                @Html.EditorFor(model => model.StudentDetails.Pincode, new { htmlAttributes = new { @class = "form-control", required = "required", maxlength = "7" } })
                                @Html.ValidationMessageFor(model => model.StudentDetails.Pincode, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-xs-12 side-no-pad mr-top-10 xs-details">
                            <div class="col-xs-12 col-md-5 side-no-pad pad7 wh">
                                CountryCode:
                            </div>
                            <div class="col-xs-12 col-sm-7 col-md-7 xs-details">
                                <div class="dropdown" id="country-codes">
                                    <button class="btn btn-primary dropdown-toggle" type="button" data-toggle="dropdown" >
                                        <span class="value">Code</span>
                                        <span class="caret"></span>
                                    </button>
                                    <ul class="dropdown-menu">
                                        <li><a href="#" value="+91">India (+91)</a></li>
                                        <li><a href="#" value="+47">Norway (+47)</a></li>
                                        <li><a href="#" value="+46">Sweeden (+46)</a></li>
                                    </ul>
                                </div>
                            </div>
                        </div>


                        <div class="col-xs-12 side-no-pad mr-top-10 xs-details">
                            <div class="col-xs-12 col-md-5 side-no-pad pad7 wh">
                                Mobile Number
                            </div>
                            <div class="col-xs-12 col-sm-7 col-md-7 xs-details">
                                @*<input type="email" class="form-control" placeholder="First Name">*@
                                @Html.EditorFor(model => model.StudentDetails.MOBILENO, new { htmlAttributes = new { @class = "form-control", required = "required", @id = "mobile-num", maxlength = "10" } })
                                @Html.ValidationMessageFor(model => model.StudentDetails.MOBILENO, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-xs-12 side-no-pad mr-top-10 xs-details" style="margin-bottom:2%">
                            <div class="col-xs-12 col-md-5 side-no-pad pad7 wh">
                                Email Id:
                            </div>
                            <div class="col-xs-12 col-sm-7 col-md-7 xs-details">
                                @*<input type="email" class="form-control" placeholder="First Name">*@
                                @Html.EditorFor(model => model.StudentDetails.EMAILID, new { htmlAttributes = new { @class = "form-control", required = "required", maxlength = "30" } })
                                @Html.ValidationMessageFor(model => model.StudentDetails.EMAILID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-xs-12 side-no-pad addstudent-table row">
                        <div class="table-responsive">
                            <table id="tblstudent" class="table table-bordered">
                                <tr class="table-head">
                                    <td>Class</td>
                                    <td>Name of School/Institute</td>
                                    <td>Board</td>
                                    <td>Year of Passing</td>
                                    <td>Percentage</td>
                                    <td></td>
                                </tr>
                                <tr class="table-body">
                                    <td>
                                        @Html.DropDownListFor(model => model.ClassesMaster.ClassID, new SelectList(Model.ClassesList, "ClassID", "ClassName"), "Please select", new { @id = "Classmaster" })
                                    </td>
                                    <td>
                                        @Html.EditorFor(model => model.StudentDetails.INSTITUTIONNAME, new { htmlAttributes = new { @class = "form-control", required = "required", maxlength = "30" } })
                                    </td>
                                    @*<td><input type="text" name="" placeholder="Delhi University"></td>*@
                                    <td>
                                        @Html.DropDownListFor(model => model.BoardsMaster.BoardID, new SelectList(Model.BoardsList, "BoardID", "BoardName"), "Please select")
                                    </td>
                                    <td>
                                        @Html.DropDownListFor(model => model.StudentDetails.PASSINGYEAR, Enumerable.Range(1950, 68).ToList().Select(x => new SelectListItem { Text = x.ToString() }), "Year")
                                    </td>
                                    <td>
                                        @*<input type="text" name="" placeholder="80%" class="max-widthinput">*@
                                        @Html.EditorFor(model => model.StudentDetails.percentage, new { htmlAttributes = new { @class = "form-control", required = "required", style = "width:50px;margin-left:27%", @id = "percentageobtained", maxlength = "2" } })
                                    </td>
                                    <td class="pad14"><button type="button" id="btnSubmit" class="btn btn-primary btn-md pull-right btn-sm">Add</button></td>
                                </tr>
                            </table>

                        </div>
                    </div>
                    <div class="col-xs-12 side-no-pad add-btn row">
                        <div class="col-xs-4 side-no-pad">
                            @*<a href="">Add</a>*@
                            @*<input type="submit" value="AddStudent" class="btn btn-default" />*@

                            <div class="tab">
                                <button id="mobileno" type="submit" class="btn btn-sucesss" style="background-color:dodgerblue">AddStudent</button>
                                @*<a href="">Add</a>*@
                            </div>

                            <div id="progress" style="margin-top:10%; position: fixed;z-index: 999;height: 75%;width: 75%;top: 0;background-color: Black;filter: alpha(opacity=60);opacity: 0.6;-moz-opacity: 0.8;display:none">
                                <div style=" z-index: 1000; height: 128px;width: 128px;margin: 50px auto;padding: 10px;width: 130px;border-radius: 10px;filter: alpha(opacity=100);opacity: 1;-moz-opacity: 1;">
                                    <img src="~/assets/images/loader4.gif" />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        }
        @using (Html.BeginForm("AddParentDetails", "Student", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            <div id="parent" class="tabcontent">
                <div class="col-xs-12 side-no-pad">
                    <div class="col-xs-12 col-md-6 row side-no-pad mr-top-10 xs-details">
                        <div class="col-xs-12 side-no-pad mr-top-10 xs-details">
                            <div class="col-xs-12 side-no-pad mr-top-10 xs-details">
                                <div class="col-xs-12 col-md-5 side-no-pad pad7 wh">
                                    UserID:
                                </div>
                                <div class="col-xs-12 col-sm-7 col-md-7 xs-details">
                                    @*<input type="email" class="form-control" placeholder="First Name">*@
                                    @Html.EditorFor(model => model.ParentDetails.USERID, new { htmlAttributes = new { @class = "form-control", maxlength = "25" } })
                                    @Html.ValidationMessageFor(model => model.ParentDetails.USERID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-xs-12 side-no-pad mr-top-10 xs-details">
                            <div class="col-xs-12 side-no-pad mr-top-10 xs-details">
                                <div class="col-xs-12 col-md-5 side-no-pad pad7 wh">
                                    Father Name:
                                </div>
                                <div class="col-xs-12 col-sm-7 col-md-7 xs-details">
                                    @*<input type="email" class="form-control" placeholder="First Name">*@
                                    @Html.EditorFor(model => model.ParentDetails.FATHERNAME, new { htmlAttributes = new { @class = "form-control", required = "required", maxlength = "25" } })
                                    @Html.ValidationMessageFor(model => model.ParentDetails.FATHERNAME, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-xs-12 side-no-pad mr-top-10 xs-details">
                            <div class="col-xs-12 side-no-pad mr-top-10 xs-details">
                                <div class="col-xs-12 col-md-5 side-no-pad pad7 wh">
                                    Father Email:
                                </div>
                                <div class="col-xs-12 col-sm-7 col-md-7 xs-details">
                                    @*<input type="email" class="form-control" placeholder="First Name">*@
                                    @Html.EditorFor(model => model.ParentDetails.FATHEREMAIL, new { htmlAttributes = new { @class = "form-control", required = "required", maxlength = "25" } })
                                    @Html.ValidationMessageFor(model => model.ParentDetails.FATHEREMAIL, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-xs-12 side-no-pad mr-top-10 xs-details">
                            <div class="col-xs-12 side-no-pad mr-top-10 xs-details">
                                <div class="col-xs-12 col-md-5 side-no-pad pad7 wh">
                                    Father Mobile:
                                </div>
                                <div class="col-xs-12 col-sm-7 col-md-7 xs-details">
                                    @*<input type="email" class="form-control" placeholder="First Name">*@
                                    @Html.EditorFor(model => model.ParentDetails.FATHERMOBILENUMBER, new { htmlAttributes = new { @class = "form-control", required = "required", @id = "Parentmobile-num", maxlength = "10" } })
                                    @Html.ValidationMessageFor(model => model.ParentDetails.FATHERMOBILENUMBER, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-xs-12 side-no-pad mr-top-10 xs-details">
                            <div class="col-xs-12 side-no-pad mr-top-10 xs-details">
                                <div class="col-xs-12 col-md-5 side-no-pad pad7 wh">
                                    Father Occupation
                                </div>
                                <div class="col-xs-12 col-sm-7 col-md-7 xs-details">
                                    @*<input type="email" class="form-control" placeholder="First Name">*@
                                    @Html.EditorFor(model => model.ParentDetails.FATHEROCCUPATION, new { htmlAttributes = new { @class = "form-control", required = "required", maxlength = "25" } })
                                    @Html.ValidationMessageFor(model => model.ParentDetails.FATHEROCCUPATION, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-xs-12 side-no-pad mr-top-10 xs-details">
                            <div class="col-xs-12 side-no-pad mr-top-10 xs-details">
                                <div class="col-xs-12 col-md-5 side-no-pad pad7 wh">
                                    Father Company Name:
                                </div>
                                <div class="col-xs-12 col-sm-7 col-md-7 xs-details">
                                    @*<input type="email" class="form-control" placeholder="First Name">*@
                                    @Html.EditorFor(model => model.ParentDetails.FATHERCOMPANYNAME, new { htmlAttributes = new { @class = "form-control", required = "required", maxlength = "25" } })
                                    @Html.ValidationMessageFor(model => model.ParentDetails.FATHERCOMPANYNAME, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-xs-12 side-no-pad mr-top-10 xs-details">
                            <div class="col-xs-12 side-no-pad mr-top-10 xs-details">
                                <div class="col-xs-12 col-md-5 side-no-pad pad7 wh">
                                    Father Designation:
                                </div>
                                <div class="col-xs-12 col-sm-7 col-md-7 xs-details">
                                    @*<input type="email" class="form-control" placeholder="First Name">*@
                                    @Html.EditorFor(model => model.ParentDetails.FATHERDESIGNATION, new { htmlAttributes = new { @class = "form-control", required = "required", maxlength = "25" } })
                                    @Html.ValidationMessageFor(model => model.ParentDetails.FATHERDESIGNATION, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-xs-12 col-md-5 col-md-offset-1 row side-no-pad mr-top-10 xs-details">
                        <div class="col-xs-12 side-no-pad mr-top-10 xs-details">
                            <div class="col-xs-12 side-no-pad mr-top-10 xs-details">
                                <div class="col-xs-12 col-md-6 side-no-pad pad7 wh">
                                    Mother Name:
                                </div>
                                <div class="col-xs-12 col-sm-7 col-md-6 xs-details">
                                    @*<input type="email" class="form-control" placeholder="First Name">*@
                                    @Html.EditorFor(model => model.ParentDetails.MOTHERNAME, new { htmlAttributes = new { @class = "form-control", required = "required", maxlength = "25" } })
                                    @Html.ValidationMessageFor(model => model.ParentDetails.MOTHERNAME, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                       
                        <div class="col-xs-12 side-no-pad mr-top-10 xs-details">
                            <div class="col-xs-12 side-no-pad mr-top-10 xs-details">
                                <div class="col-xs-12 col-md-6 side-no-pad pad7 wh">
                                    Mother Mobile:
                                </div>
                                <div class="col-xs-12 col-sm-7 col-md-6 xs-details">
                                    @*<input type="email" class="form-control" placeholder="First Name">*@
                                    @Html.EditorFor(model => model.ParentDetails.MOTHERMOBILENUMBER, new { htmlAttributes = new { @class = "form-control", required = "required", maxlength = "10", @id = "mothermobile-num" } })
                                    @Html.ValidationMessageFor(model => model.ParentDetails.MOTHERMOBILENUMBER, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-xs-12 side-no-pad mr-top-10 xs-details">
                            <div class="col-xs-12 side-no-pad mr-top-10 xs-details">
                                <div class="col-xs-12 col-md-6 side-no-pad pad7 wh">
                                    Mother Occupation:
                                </div>
                                <div class="col-xs-12 col-sm-7 col-md-6 xs-details">
                                    @*<input type="email" class="form-control" placeholder="First Name">*@
                                    @Html.EditorFor(model => model.ParentDetails.MOTHEROCCUPATION, new { htmlAttributes = new { @class = "form-control", required = "required", maxlength = "25" } })
                                    @Html.ValidationMessageFor(model => model.ParentDetails.MOTHEROCCUPATION, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-xs-12 side-no-pad mr-top-10 xs-details">
                            <div class="col-xs-12 side-no-pad mr-top-10 xs-details">
                                <div class="col-xs-12 col-md-6 side-no-pad pad7 wh">
                                    Mother Company Name:
                                </div>
                                <div class="col-xs-12 col-sm-7 col-md-6 xs-details">
                                    @*<input type="email" class="form-control" placeholder="First Name">*@
                                    @Html.EditorFor(model => model.ParentDetails.MOTHERCOMPANYNAME, new { htmlAttributes = new { @class = "form-control", required = "required", maxlength = "25" } })
                                    @Html.ValidationMessageFor(model => model.ParentDetails.MOTHERCOMPANYNAME, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-xs-12 side-no-pad mr-top-10 xs-details">
                            <div class="col-xs-12 side-no-pad mr-top-10 xs-details">
                                <div class="col-xs-12 col-md-6 side-no-pad pad7 wh">
                                    Mother Designation
                                </div>
                                <div class="col-xs-12 col-sm-7 col-md-6 xs-details">
                                    @*<input type="email" class="form-control" placeholder="First Name">*@
                                    @Html.EditorFor(model => model.ParentDetails.MOTHERDESIGNATION, new { htmlAttributes = new { @class = "form-control", required = "required", maxlength = "25" } })
                                    @Html.ValidationMessageFor(model => model.ParentDetails.MOTHERDESIGNATION, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-xs-12 side-no-pad add-btn row">
                        <div class="col-xs-4 side-no-pad">
                            @*<a href="">Add</a>*@
                            <input type="submit" class="btn btn-success" value="AddParent" style="background-color:dodgerblue" />
                        </div>
                    </div>
                </div>
            </div>
        }
        @using (Html.BeginForm("AddProfessionalDetails", "Student", FormMethod.Post))
        {
            @Html.AntiForgeryToken()

            <div id="professional" class="tabcontent">
                <div class="col-xs-12 side-no-pad">
                    <div class="col-xs-12 col-md-6 row side-no-pad mr-top-10 xs-details">
                        <div class="col-xs-12 side-no-pad mr-top-10 xs-details">
                            <div class="col-xs-12 side-no-pad mr-top-10 xs-details">
                                <div class="col-xs-12 col-md-5 side-no-pad pad7 wh">
                                    UserID:
                                </div>
                                <div class="col-xs-12 col-sm-7 col-md-7 xs-details">
                                    @*<input type="email" class="form-control" placeholder="First Name">*@
                                    @Html.EditorFor(model => model.ProfessionalDetails.USERID, new { htmlAttributes = new { @class = "form-control", maxlength = "25" } })
                                    @Html.ValidationMessageFor(model => model.ProfessionalDetails.USERID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-xs-12 side-no-pad mr-top-10 xs-details">
                            <div class="col-xs-12 side-no-pad mr-top-10 xs-details">
                                <div class="col-xs-12 col-md-5 side-no-pad pad7 wh">
                                    Current Company Name:
                                </div>
                                <div class="col-xs-12 col-sm-7 col-md-7 xs-details">
                                    @*<input type="email" class="form-control" placeholder="First Name">*@
                                    @Html.EditorFor(model => model.ProfessionalDetails.COMPANYNAME, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                                    @Html.ValidationMessageFor(model => model.ProfessionalDetails.COMPANYNAME, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-xs-12 side-no-pad mr-top-10 xs-details">
                            <div class="col-xs-12 side-no-pad mr-top-10 xs-details">
                                <div class="col-xs-12 col-md-5 side-no-pad pad7 wh">
                                    Designation:
                                </div>
                                <div class="col-xs-12 col-sm-7 col-md-7 xs-details">
                                    @*<input type="email" class="form-control" placeholder="First Name">*@
                                    @Html.EditorFor(model => model.ProfessionalDetails.DESIGNATION, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                                    @Html.ValidationMessageFor(model => model.ProfessionalDetails.DESIGNATION, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-xs-12 side-no-pad mr-top-10 xs-details">
                                <div class="col-xs-12 side-no-pad mr-top-10 xs-details">
                                    <div class="col-xs-12 col-md-5 side-no-pad pad7 wh">
                                        Remarks
                                    </div>
                                    <div class="col-xs-12 col-sm-7 col-md-7 xs-details">
                                        @*<input type="email" class="form-control" placeholder="First Name">*@
                                        @Html.EditorFor(model => model.ProfessionalDetails.REMARKS, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                                        @Html.ValidationMessageFor(model => model.ProfessionalDetails.REMARKS, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-xs-12 col-md-5 col-md-offset-1 row side-no-pad mr-top-10 xs-details">

                    </div>
                    <div class="col-xs-12 side-no-pad add-btn row">
                        <div class="col-xs-4 side-no-pad">
                            @*<a href="">Add</a>*@
                            <input type="submit" class="btn btn-success" value="AddProfessional" style="background-color:dodgerblue" />
                        </div>
                    </div>
                </div>
            </div>
        }
        <div id="other" class="tabcontent">
            <div class="col-xs-12 side-no-pad">
                <div class="col-xs-12 side-no-pad mr-top-10  xs-details">
                    <div class="col-xs-12 col-md-2 side-no-pad pad7 wh">
                        Source
                    </div>
                    <div class="col-xs-12 col-md-2">
                        <select class="form-control">
                            <option>Email</option>
                            <option>29 september 2017</option>
                            <option>29 september 2017</option>
                            <option>29 september 2017</option>
                            <option>29 september 2017</option>
                        </select>
                    </div>
                </div>
                <div class="col-xs-12 side-no-pad mr-top-10 pad-bottom-20 xs-details">
                    <div class="col-xs-12 col-md-2 side-no-pad pad7 wh">
                        Reference
                    </div>
                    <div class="col-xs-12 col-sm-3 col-md-2 xs-details">
                        <input type="email" class="form-control" placeholder="Enter Name">
                    </div>
                </div>
            </div>
            <div class="col-xs-12 side-no-pad add-btn">
                <div class="col-xs-1 side-no-pad">
                    @*<a href="">Add</a>*@
                </div>
            </div>
        </div>
    </div>
</div>





<script>
    $(document).ready(function () {
        $('#country-codes li a').on('click', function () {
            $('#country-codes button span.value').text($(this).attr('value'));
        });
    });

</script>
<script type="text/javascript">
    function openCity(evt, cityName) {
        // Declare all variables
        var i, tabcontent, tablinks;

        // Get all elements with class="tabcontent" and hide them
        tabcontent = document.getElementsByClassName("tabcontent");
        for (i = 0; i < tabcontent.length; i++) {
            tabcontent[i].style.display = "none";
        }

        // Get all elements with class="tablinks" and remove the class "active"
        tablinks = document.getElementsByClassName("tablinks");
        for (i = 0; i < tablinks.length; i++) {
            tablinks[i].className = tablinks[i].className.replace(" active", "");
        }

        // Show the current tab, and add an "active" class to the button that opened the tab
        document.getElementById(cityName).style.display = "block";
        evt.currentTarget.className += " active";
    }
    document.getElementById("defaultOpen").click();
</script>




